apply plugin: 'com.android.application'
apply from: 'and_res_guard.gradle'

//定义时间
def releaseTime() {
    return new Date().format("yyyyMMdd_HHmm", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [moduleName: project.getName()]
            }
        }
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        dexOptions {
            javaMaxHeapSize "4g"
            preDexLibraries = false
        }

        ndk { abiFilters "armeabi", "armeabi-v7a", "x86" }
    }

    signingConfigs {
        config {
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
        }
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true // 是否进行混淆
            useProguard true // 代码压缩
            zipAlignEnabled true  // Zipalign优化
            shrinkResources true // 资源压缩false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "IS_TEST", "false"//切换正式地址
            buildConfigField "String", "ORDER_KEY", "\"6z8e5h943cf44vd0bic50d4fbe300o3d\""
        }

        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.config
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "IS_TEST", "false"
            buildConfigField "String", "ORDER_KEY", "\"6z8e5h943cf44vd0bic50d4fbe300o3d\""

        }
    }

    // 批量打包
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //输出apk名称为：selflottery_渠道名_版本名_时间.apk
                def fileName = "selflottery_${variant.productFlavors[0].name}_${variant.buildType.name}" +
                        "_v${defaultConfig.versionName}_${releaseTime()}.apk"
                outputFileName = fileName
            }
        }
    }


    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    //多维度理解(版本差异化打包)
    flavorDimensions "default"

    //渠道名称
    productFlavors {
        service {}
//        yingyongbao {}
//        xiaomi {}
//        _360 {}
//        baidu {}
//        wandoujia {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    //android 节点下添加 强制使用某个版本
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    configurations.all {
        resolutionStrategy.force rootProject.ext.dependencies["annotations"]
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    //noinspection GradleCompatible
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["fragment"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["cardview"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["support-vector-drawable"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["palette"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    implementation rootProject.ext.dependencies["zxing-bga"]
    implementation rootProject.ext.dependencies["zxing-embedded"]
    implementation rootProject.ext.dependencies["easypermissions"]
    implementation rootProject.ext.dependencies["permission"]
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["chuck"]
    implementation rootProject.ext.dependencies["butterknife"]
    implementation rootProject.ext.dependencies["butterknife-compiler"]
    implementation rootProject.ext.dependencies["BaseAdapterHelper"]
    implementation rootProject.ext.dependencies["svg"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["grav"]
    implementation rootProject.ext.dependencies["RoundImageView"]
    implementation rootProject.ext.dependencies["CompressHelper"]
    implementation rootProject.ext.dependencies["autolayout"]
    implementation rootProject.ext.dependencies["androidanimations"]
    implementation rootProject.ext.dependencies["easing"]
    implementation rootProject.ext.dependencies["fresco"]
    implementation rootProject.ext.dependencies["avi"]
    implementation rootProject.ext.dependencies["okgo"]
    implementation rootProject.ext.dependencies["tencent"]
    implementation rootProject.ext.dependencies["SuperTextView"]
    implementation rootProject.ext.dependencies["SpringScrollView"]
    implementation rootProject.ext.dependencies["easytools"]
    implementation rootProject.ext.dependencies["PickerView"]
    implementation rootProject.ext.dependencies["countdownview"]
    implementation rootProject.ext.dependencies["overscroll-decor"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation rootProject.ext.dependencies["kongzue.dialog"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]
    implementation rootProject.ext.dependencies["imagepicker"]
    implementation rootProject.ext.dependencies["NewbieGuide"]
    implementation(rootProject.ext.dependencies["glide"]) {
        exclude group: "com.android.support"
    }
    annotationProcessor rootProject.ext.dependencies["glide_compiler"]
    /*布局框架*/
    implementation(rootProject.ext.dependencies["vlayout"]) {
        transitive = true
    }
    /*图片选择加载*/
    /*身份证扫描类库*/
    implementation project(':ocr_ui')
    /*身份证扫描jar包*/
    implementation files('src/main/jniLibs/ocr-sdk.jar')
    implementation files('libs/tbs_sdk_thirdapp_v3.6.0.1315_43612.jar')
    /*StringUtils*/
    implementation files('libs/commons-lang3-3.0-beta.jar')
    implementation files('libs/commons-codec.jar')
    implementation files('libs/sun.misc.BASE64Decoder.jar')
}

repositories {
    mavenCentral()
}
